$date
	Sun May 19 17:48:55 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! WriteData [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 # DataAdr [31:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$var integer 32 & i [31:0] $end
$scope module uut $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 ' WriteData [31:0] $end
$var wire 32 ( ReadData [31:0] $end
$var wire 32 ) PC [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 * Instr [31:0] $end
$var wire 32 + DataAdr [31:0] $end
$scope module dmem $end
$var wire 1 $ clk $end
$var wire 32 , rd [31:0] $end
$var wire 1 " we $end
$var wire 32 - wd [31:0] $end
$var wire 32 . a [31:0] $end
$upscope $end
$scope module imem $end
$var wire 32 / rd [31:0] $end
$var wire 32 0 a [31:0] $end
$upscope $end
$scope module rvsingle $end
$var wire 32 1 Instr [31:0] $end
$var wire 32 2 ReadData [31:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 3 Zero $end
$var wire 32 4 WriteData [31:0] $end
$var wire 2 5 ResultSrc [1:0] $end
$var wire 1 6 RegWrite $end
$var wire 1 7 PCSrc $end
$var wire 32 8 PC [31:0] $end
$var wire 1 " MemWrite $end
$var wire 1 9 Jump $end
$var wire 2 : ImmSrc [1:0] $end
$var wire 1 ; ALUSrc $end
$var wire 32 < ALUResult [31:0] $end
$var wire 3 = ALUControl [2:0] $end
$scope module c $end
$var wire 1 7 PCSrc $end
$var wire 3 > funct3 [2:0] $end
$var wire 1 ? funct7b5 $end
$var wire 7 @ op [6:0] $end
$var wire 1 3 Zero $end
$var wire 2 A ResultSrc [1:0] $end
$var wire 1 6 RegWrite $end
$var wire 1 " MemWrite $end
$var wire 1 9 Jump $end
$var wire 2 B ImmSrc [1:0] $end
$var wire 1 C Branch $end
$var wire 1 ; ALUSrc $end
$var wire 2 D ALUOp [1:0] $end
$var wire 3 E ALUControl [2:0] $end
$scope module ad $end
$var wire 1 F RtypeSub $end
$var wire 3 G funct3 [2:0] $end
$var wire 1 ? funct7b5 $end
$var wire 1 H opb5 $end
$var wire 2 I ALUOp [1:0] $end
$var reg 3 J ALUControl [2:0] $end
$upscope $end
$scope module md $end
$var wire 7 K op [6:0] $end
$var reg 2 L ALUOp [1:0] $end
$var reg 1 ; ALUSrc $end
$var reg 1 C Branch $end
$var reg 2 M ImmSrc [1:0] $end
$var reg 1 9 Jump $end
$var reg 1 " MemWrite $end
$var reg 1 6 RegWrite $end
$var reg 2 N ResultSrc [1:0] $end
$upscope $end
$upscope $end
$scope module dp $end
$var wire 3 O ALUControl [2:0] $end
$var wire 1 ; ALUSrc $end
$var wire 2 P ImmSrc [1:0] $end
$var wire 32 Q Instr [31:0] $end
$var wire 1 7 PCSrc $end
$var wire 32 R ReadData [31:0] $end
$var wire 1 6 RegWrite $end
$var wire 2 S ResultSrc [1:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 3 Zero $end
$var wire 32 T WriteData [31:0] $end
$var wire 32 U SrcB [31:0] $end
$var wire 32 V SrcA [31:0] $end
$var wire 32 W Result [31:0] $end
$var wire 32 X PCTarget [31:0] $end
$var wire 32 Y PCPlus4 [31:0] $end
$var wire 32 Z PCNext [31:0] $end
$var wire 32 [ PC [31:0] $end
$var wire 32 \ ImmExt [31:0] $end
$var wire 32 ] ALUResult [31:0] $end
$scope module alu $end
$var wire 3 ^ sel [2:0] $end
$var wire 1 3 zero $end
$var wire 32 _ b [31:0] $end
$var wire 32 ` a [31:0] $end
$var reg 32 a y [31:0] $end
$upscope $end
$scope module ext $end
$var wire 2 b immsrc [1:0] $end
$var wire 25 c instr [31:7] $end
$var reg 32 d immext [31:0] $end
$upscope $end
$scope module pcadd4 $end
$var wire 32 e b [31:0] $end
$var wire 32 f y [31:0] $end
$var wire 32 g a [31:0] $end
$upscope $end
$scope module pcaddbranch $end
$var wire 32 h b [31:0] $end
$var wire 32 i y [31:0] $end
$var wire 32 j a [31:0] $end
$upscope $end
$scope module pcmux $end
$var wire 32 k d0 [31:0] $end
$var wire 32 l d1 [31:0] $end
$var wire 1 7 s $end
$var wire 32 m y [31:0] $end
$var parameter 32 n WIDTH $end
$upscope $end
$scope module pcreg $end
$var wire 1 $ clk $end
$var wire 32 o d [31:0] $end
$var wire 1 % reset $end
$var parameter 32 p WIDTH $end
$var reg 32 q q [31:0] $end
$upscope $end
$scope module resultmux $end
$var wire 32 r d0 [31:0] $end
$var wire 32 s d1 [31:0] $end
$var wire 32 t d2 [31:0] $end
$var wire 2 u s [1:0] $end
$var parameter 32 v WIDTH $end
$var reg 32 w y [31:0] $end
$upscope $end
$scope module rf $end
$var wire 5 x a1 [4:0] $end
$var wire 5 y a2 [4:0] $end
$var wire 5 z a3 [4:0] $end
$var wire 1 $ clk $end
$var wire 32 { wd3 [31:0] $end
$var wire 1 6 we3 $end
$var wire 32 | rd2 [31:0] $end
$var wire 32 } rd1 [31:0] $end
$upscope $end
$scope module srcbmux $end
$var wire 32 ~ d0 [31:0] $end
$var wire 32 !" d1 [31:0] $end
$var wire 1 ; s $end
$var wire 32 "" y [31:0] $end
$var parameter 32 #" WIDTH $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 #"
b100000 v
b100000 p
b100000 n
$end
#25
$dumpvars
b101 ""
b101 !"
bx ~
b0 }
bx |
b101 {
b10 z
b101 y
b0 x
b101 w
b0 u
b100 t
b1101 s
b101 r
b0 q
b100 o
b100 m
b101 l
b100 k
b0 j
b101 i
b101 h
b0 g
b100 f
b100 e
b101 d
b1010000000000010 c
b0 b
b101 a
b0 `
b101 _
b0 ^
b101 ]
b101 \
b0 [
b100 Z
b100 Y
b101 X
b101 W
b0 V
b101 U
bx T
b0 S
b1101 R
b10100000000000100010011 Q
b0 P
b0 O
b0 N
b0 M
b10 L
b10011 K
b0 J
b10 I
0H
b0 G
0F
b0 E
b10 D
0C
b0 B
b0 A
b10011 @
0?
b0 >
b0 =
b101 <
1;
b0 :
09
b0 8
07
16
b0 5
bx 4
03
b1101 2
b10100000000000100010011 1
b0 0
b10100000000000100010011 /
b101 .
bx -
b1101 ,
b101 +
b10100000000000100010011 *
b0 )
b1101 (
bx '
b10100 &
0%
0$
b101 #
0"
bx !
$end
#30
b1110 (
b1110 ,
b1110 2
b1110 R
b1110 s
b1100 W
b1100 w
b1100 {
b1100 #
b1100 +
b1100 .
b1100 <
b1100 ]
b1100 a
b1100 r
b1100 U
b1100 _
b1100 ""
b1100 \
b1100 d
b1100 h
b1100 !"
b1100 y
b11 z
b11000000000000011 c
b1000 Z
b1000 m
b1000 o
b110000000000000110010011 *
b110000000000000110010011 /
b110000000000000110010011 1
b110000000000000110010011 Q
b10000 X
b10000 i
b10000 l
b1000 Y
b1000 f
b1000 k
b1000 t
b100 )
b100 0
b100 8
b100 [
b100 g
b100 j
b100 q
1$
#35
0$
#40
b10001 (
b10001 ,
b10001 2
b10001 R
b10001 s
b11 W
b11 w
b11 {
b11 #
b11 +
b11 .
b11 <
b11 ]
b11 a
b11 r
b11111111111111111111111111110111 U
b11111111111111111111111111110111 _
b11111111111111111111111111110111 ""
b1100 V
b1100 `
b1100 }
b11111111111111111111111111110111 \
b11111111111111111111111111110111 d
b11111111111111111111111111110111 h
b11111111111111111111111111110111 !"
1?
b11 x
b10111 y
b111 z
b1111111101110001100000111 c
b1100 Z
b1100 m
b1100 o
b11111111011100011000001110010011 *
b11111111011100011000001110010011 /
b11111111011100011000001110010011 1
b11111111011100011000001110010011 Q
b11111111111111111111111111111111 X
b11111111111111111111111111111111 i
b11111111111111111111111111111111 l
b1100 Y
b1100 f
b1100 k
b1100 t
b1000 )
b1000 0
b1000 8
b1000 [
b1000 g
b1000 j
b1000 q
1$
#45
0$
#50
b1101 (
b1101 ,
b1101 2
b1101 R
b1101 s
b111 W
b111 w
b111 {
b111 #
b111 +
b111 .
b111 <
b111 ]
b111 a
b111 r
b101 U
b101 _
b101 ""
1H
bx :
bx B
bx M
bx P
bx b
0;
b11 =
b11 E
b11 J
b11 O
b11 ^
b11 V
b11 `
b11 }
b101 !
b101 '
b101 -
b101 4
b101 T
b101 |
b101 ~
bx \
bx d
bx h
bx !"
b110011 @
b110011 K
b110 >
b110 G
0?
b111 x
b10 y
b100 z
b100011111000100 c
b10000 Z
b10000 m
b10000 o
b1000111110001000110011 *
b1000111110001000110011 /
b1000111110001000110011 1
b1000111110001000110011 Q
bx X
bx i
bx l
b10000 Y
b10000 f
b10000 k
b10000 t
b1100 )
b1100 0
b1100 8
b1100 [
b1100 g
b1100 j
b1100 q
1$
#55
0$
#60
b100 W
b100 w
b100 {
b100 #
b100 +
b100 .
b100 <
b100 ]
b100 a
b100 r
b111 U
b111 _
b111 ""
b100 =
b100 E
b100 J
b100 O
b100 ^
b1100 V
b1100 `
b1100 }
b111 !
b111 '
b111 -
b111 4
b111 T
b111 |
b111 ~
b111 >
b111 G
b11 x
b100 y
b101 z
b1000001111100101 c
b10100 Z
b10100 m
b10100 o
b10000011111001010110011 *
b10000011111001010110011 /
b10000011111001010110011 1
b10000011111001010110011 Q
b10100 Y
b10100 f
b10100 k
b10100 t
b10000 )
b10000 0
b10000 8
b10000 [
b10000 g
b10000 j
b10000 q
1$
#65
0$
#70
b10010 (
b10010 ,
b10010 2
b10010 R
b10010 s
b1011 W
b1011 w
b1011 {
b1011 #
b1011 +
b1011 .
b1011 <
b1011 ]
b1011 a
b1011 r
b0 =
b0 E
b0 J
b0 O
b0 ^
b100 V
b100 `
b100 }
b0 >
b0 G
b101 x
b1000010100000101 c
b11000 Z
b11000 m
b11000 o
b10000101000001010110011 *
b10000101000001010110011 /
b10000101000001010110011 1
b10000101000001010110011 Q
b11000 Y
b11000 f
b11000 k
b11000 t
b10100 )
b10100 0
b10100 8
b10100 [
b10100 g
b10100 j
b10100 q
1$
#75
0$
#80
b1001000 X
b1001000 i
b1001000 l
b110000 \
b110000 d
b110000 h
b110000 !"
b1 =
b1 E
b1 J
b1 O
b1 ^
b11 U
b11 _
b11 ""
b10010 (
b10010 ,
b10010 2
b10010 R
b10010 s
b1000 W
b1000 w
b1000 {
06
b10 :
b10 B
b10 M
b10 P
b10 b
1C
b1 D
b1 I
b1 L
b11 !
b11 '
b11 -
b11 4
b11 T
b11 |
b11 ~
b1000 #
b1000 +
b1000 .
b1000 <
b1000 ]
b1000 a
b1000 r
b1100011 @
b1100011 K
b111 y
b10000 z
b1001110010100010000 c
b1011 V
b1011 `
b1011 }
b11100 Z
b11100 m
b11100 o
b10011100101000100001100011 *
b10011100101000100001100011 /
b10011100101000100001100011 1
b10011100101000100001100011 Q
b11100 Y
b11100 f
b11100 k
b11100 t
b11000 )
b11000 0
b11000 8
b11000 [
b11000 g
b11000 j
b11000 q
1$
#85
0$
#90
13
b10001 (
b10001 ,
b10001 2
b10001 R
b10001 s
b0 W
b0 w
b0 {
b10 =
b10 E
b10 J
b10 O
b10 ^
b0 #
b0 +
b0 .
b0 <
b0 ]
b0 a
b0 r
b111 U
b111 _
b111 ""
16
bx :
bx B
bx M
bx P
bx b
0C
b10 D
b10 I
b10 L
b1100 V
b1100 `
b1100 }
b111 !
b111 '
b111 -
b111 4
b111 T
b111 |
b111 ~
bx \
bx d
bx h
bx !"
b110011 @
b110011 K
b10 >
b10 G
b11 x
b100 y
b100 z
b1000001101000100 c
b100000 Z
b100000 m
b100000 o
b10000011010001000110011 *
b10000011010001000110011 /
b10000011010001000110011 1
b10000011010001000110011 Q
bx X
bx i
bx l
b100000 Y
b100000 f
b100000 k
b100000 t
b11100 )
b11100 0
b11100 8
b11100 [
b11100 g
b11100 j
b11100 q
1$
#95
0$
#100
17
b101000 X
b101000 i
b101000 l
b1000 \
b1000 d
b1000 h
b1000 !"
06
b10 :
b10 B
b10 M
b10 P
b10 b
1C
b1 D
b1 I
b1 L
b1 =
b1 E
b1 J
b1 O
b1 ^
b0 V
b0 `
b0 }
b0 U
b0 _
b0 ""
b1100011 @
b1100011 K
b0 >
b0 G
b100 x
b0 y
b1000 z
b10000001000 c
b0 !
b0 '
b0 -
b0 4
b0 T
b0 |
b0 ~
b101000 Z
b101000 m
b101000 o
b100000010001100011 *
b100000010001100011 /
b100000010001100011 1
b100000010001100011 Q
b100100 Y
b100100 f
b100100 k
b100100 t
b100000 )
b100000 0
b100000 8
b100000 [
b100000 g
b100000 j
b100000 q
1$
#105
0$
#110
07
b10001 (
b10001 ,
b10001 2
b10001 R
b10001 s
b1 W
b1 w
b1 {
b10 =
b10 E
b10 J
b10 O
b10 ^
03
b1 #
b1 +
b1 .
b1 <
b1 ]
b1 a
b1 r
b101 U
b101 _
b101 ""
16
bx :
bx B
bx M
bx P
bx b
0C
b10 D
b10 I
b10 L
b11 V
b11 `
b11 }
b101 !
b101 '
b101 -
b101 4
b101 T
b101 |
b101 ~
bx \
bx d
bx h
bx !"
b110011 @
b110011 K
b10 >
b10 G
b111 x
b10 y
b100 z
b100011101000100 c
b101100 Z
b101100 m
b101100 o
b1000111010001000110011 *
b1000111010001000110011 /
b1000111010001000110011 1
b1000111010001000110011 Q
bx X
bx i
bx l
b101100 Y
b101100 f
b101100 k
b101100 t
b101000 )
b101000 0
b101000 8
b101000 [
b101000 g
b101000 j
b101000 q
1$
#115
0$
#120
b1110 (
b1110 ,
b1110 2
b1110 R
b1110 s
b1100 W
b1100 w
b1100 {
b1100 #
b1100 +
b1100 .
b1100 <
b1100 ]
b1100 a
b1100 r
b1011 U
b1011 _
b1011 ""
b0 =
b0 E
b0 J
b0 O
b0 ^
b1 V
b1 `
b1 }
b1011 !
b1011 '
b1011 -
b1011 4
b1011 T
b1011 |
b1011 ~
b0 >
b0 G
b100 x
b101 y
b111 z
b1010010000000111 c
b110000 Z
b110000 m
b110000 o
b10100100000001110110011 *
b10100100000001110110011 /
b10100100000001110110011 1
b10100100000001110110011 Q
b110000 Y
b110000 f
b110000 k
b110000 t
b101100 )
b101100 0
b101100 8
b101100 [
b101100 g
b101100 j
b101100 q
1$
#125
0$
#130
b1101 (
b1101 ,
b1101 2
b1101 R
b1101 s
b111 W
b111 w
b111 {
b1 =
b1 E
b1 J
b1 O
b1 ^
b111 #
b111 +
b111 .
b111 <
b111 ]
b111 a
b111 r
b101 U
b101 _
b101 ""
1F
b1100 V
b1100 `
b1100 }
b101 !
b101 '
b101 -
b101 4
b101 T
b101 |
b101 ~
1?
b111 x
b10 y
b100000000100011100000111 c
b110100 Z
b110100 m
b110100 o
b1000000001000111000001110110011 *
b1000000001000111000001110110011 /
b1000000001000111000001110110011 1
b1000000001000111000001110110011 Q
b110100 Y
b110100 f
b110100 k
b110100 t
b110000 )
b110000 0
b110000 8
b110000 [
b110000 g
b110000 j
b110000 q
1$
#135
0$
#140
b10001000 X
b10001000 i
b10001000 l
b1010100 \
b1010100 d
b1010100 h
b1010100 !"
03
b1010100 U
b1010100 _
b1010100 ""
bx (
bx ,
bx 2
bx R
bx s
b1100000 W
b1100000 w
b1100000 {
06
b1 :
b1 B
b1 M
b1 P
b1 b
1;
1"
b0 D
b0 I
b0 L
b0 =
b0 E
b0 J
b0 O
b0 ^
0F
b111 !
b111 '
b111 -
b111 4
b111 T
b111 |
b111 ~
b1100000 #
b1100000 +
b1100000 .
b1100000 <
b1100000 ]
b1100000 a
b1100000 r
b100011 @
b100011 K
b10 >
b10 G
0?
b11 x
b111 y
b10100 z
b10001110001101010100 c
b1100 V
b1100 `
b1100 }
b111000 Z
b111000 m
b111000 o
b100011100011010101000100011 *
b100011100011010101000100011 /
b100011100011010101000100011 1
b100011100011010101000100011 Q
b111000 Y
b111000 f
b111000 k
b111000 t
b110100 )
b110100 0
b110100 8
b110100 [
b110100 g
b110100 j
b110100 q
1$
#145
0$
#150
b111 W
b111 w
b111 {
b1100000 #
b1100000 +
b1100000 .
b1100000 <
b1100000 ]
b1100000 a
b1100000 r
b1100000 U
b1100000 _
b1100000 ""
0H
16
b0 :
b0 B
b0 M
b0 P
b0 b
0"
b1 5
b1 A
b1 N
b1 S
b1 u
b0 V
b0 `
b0 }
b0 !
b0 '
b0 -
b0 4
b0 T
b0 |
b0 ~
b1100000 \
b1100000 d
b1100000 h
b1100000 !"
b11 @
b11 K
b0 x
b0 y
b10 z
b11000000000001000010 c
b111100 Z
b111100 m
b111100 o
b110000000000010000100000011 *
b110000000000010000100000011 /
b110000000000010000100000011 1
b110000000000010000100000011 Q
b111 (
b111 ,
b111 2
b111 R
b111 s
b10011000 X
b10011000 i
b10011000 l
b111100 Y
b111100 f
b111100 k
b111100 t
b111000 )
b111000 0
b111000 8
b111000 [
b111000 g
b111000 j
b111000 q
1$
#155
0$
#160
b1111 (
b1111 ,
b1111 2
b1111 R
b1111 s
b10010 W
b10010 w
b10010 {
b10010 #
b10010 +
b10010 .
b10010 <
b10010 ]
b10010 a
b10010 r
b1011 U
b1011 _
b1011 ""
1H
bx :
bx B
bx M
bx P
bx b
0;
b0 5
b0 A
b0 N
b0 S
b0 u
b10 D
b10 I
b10 L
b111 V
b111 `
b111 }
b1011 !
b1011 '
b1011 -
b1011 4
b1011 T
b1011 |
b1011 ~
bx \
bx d
bx h
bx !"
b110011 @
b110011 K
b0 >
b0 G
b10 x
b101 y
b1001 z
b1010001000001001 c
b1000000 Z
b1000000 m
b1000000 o
b10100010000010010110011 *
b10100010000010010110011 /
b10100010000010010110011 1
b10100010000010010110011 Q
bx X
bx i
bx l
b1000000 Y
b1000000 f
b1000000 k
b1000000 t
b111100 )
b111100 0
b111100 8
b111100 [
b111100 g
b111100 j
b111100 q
1$
#165
0$
#170
bx (
bx ,
bx 2
bx R
bx s
b1001000 X
b1001000 i
b1001000 l
b1000 \
b1000 d
b1000 h
b1000 !"
b1000100 W
b1000100 w
b1000100 {
17
x3
bx #
bx +
bx .
bx <
bx ]
bx a
bx r
bx U
bx _
bx ""
b11 :
b11 B
b11 M
b11 P
b11 b
b10 5
b10 A
b10 N
b10 S
b10 u
b0 D
b0 I
b0 L
19
b0 V
b0 `
b0 }
bx !
bx '
bx -
bx 4
bx T
bx |
bx ~
b1101111 @
b1101111 K
b0 x
b1000 y
b11 z
b10000000000000011 c
b1001000 Z
b1001000 m
b1001000 o
b100000000000000111101111 *
b100000000000000111101111 /
b100000000000000111101111 1
b100000000000000111101111 Q
b1000100 Y
b1000100 f
b1000100 k
b1000100 t
b1000000 )
b1000000 0
b1000000 8
b1000000 [
b1000000 g
b1000000 j
b1000000 q
1$
#175
0$
#180
b10011 (
b10011 ,
b10011 2
b10011 R
b10011 s
07
03
b11001 #
b11001 +
b11001 .
b11001 <
b11001 ]
b11001 a
b11001 r
b10010 U
b10010 _
b10010 ""
bx :
bx B
bx M
bx P
bx b
b0 5
b0 A
b0 N
b0 S
b0 u
b10 D
b10 I
b10 L
09
b111 V
b111 `
b111 }
b10010 !
b10010 '
b10010 -
b10010 4
b10010 T
b10010 |
b10010 ~
bx \
bx d
bx h
bx !"
b110011 @
b110011 K
b10 x
b1001 y
b10 z
b10010001000000010 c
b1001100 Z
b1001100 m
b1001100 o
b11001 W
b11001 w
b11001 {
b100100010000000100110011 *
b100100010000000100110011 /
b100100010000000100110011 1
b100100010000000100110011 Q
bx X
bx i
bx l
b1001100 Y
b1001100 f
b1001100 k
b1001100 t
b1001000 )
b1001000 0
b1001000 8
b1001000 [
b1001000 g
b1001000 j
b1001000 q
1$
#185
0$
#190
b1101100 X
b1101100 i
b1101100 l
b100000 \
b100000 d
b100000 h
b100000 !"
03
b100000 U
b100000 _
b100000 ""
bx (
bx ,
bx 2
bx R
bx s
b1100100 W
b1100100 w
b1100100 {
06
b1 :
b1 B
b1 M
b1 P
b1 b
1;
1"
b0 D
b0 I
b0 L
b0 =
b0 E
b0 J
b0 O
b0 ^
b11001 !
b11001 '
b11001 -
b11001 4
b11001 T
b11001 |
b11001 ~
b1100100 #
b1100100 +
b1100100 .
b1100100 <
b1100100 ]
b1100100 a
b1100100 r
b100011 @
b100011 K
b10 >
b10 G
b11 x
b10 y
b0 z
b1000100001101000000 c
b1000100 V
b1000100 `
b1000100 }
b1010000 Z
b1010000 m
b1010000 o
b10001000011010000000100011 *
b10001000011010000000100011 /
b10001000011010000000100011 1
b10001000011010000000100011 Q
b1010000 Y
b1010000 f
b1010000 k
b1010000 t
b1001100 )
b1001100 0
b1001100 8
b1001100 [
b1001100 g
b1001100 j
b1001100 q
1$
#195
